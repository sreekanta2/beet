generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id   String @id @default(cuid())
  name String

  image         String?
  refCode       String    @unique
  referredBy    String?
  country       String?
  emailVerified DateTime?
  subscribe     String    @default("no")
  agree         Boolean   @default(false)
  telephone     String    @unique
  role          String    @default("user")
  password      String

  accounts Account[]
  sessions Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Accounts for auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

// Sessions
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

// OTPs for verification
model Otp {
  id        String   @id @default(cuid())
  email     String
  code      String
  createdAt DateTime @default(now())
  expiresAt DateTime
}
